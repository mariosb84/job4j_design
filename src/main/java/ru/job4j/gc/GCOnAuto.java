package ru.job4j.gc;

public class GCOnAuto {
/*-Xmx4m -Xms4m*/
    public static void main(String[] args) {
        GCDemo.info();
        for (int i = 0; i < 4000; i++) {
            /*new User(i, "User_N_");*/
            new User();
            System.out.println(i);
        }
        GCDemo.info();
    }
}
/* User user1 = new User(1, "Ivan") и User user2 = new User(1, "IvanIvanovich") (расписать расчет):

user1 содержит 2 поля и занимает в памяти : 12байт заголовок + int 4 байта
+ ссылка на String 4 байта. Итого 20 + округление к кратности 8 = 24байта :
+ String : 24 байта
 + new char[4]
Заголовок: 8 байт + 4 байта на длину массива == 12 байт
Примитивы char: 2 байта * 4 == 8 байт
Выравнивание для кратности 8 : 4 байта
Итого: 24 байта
Общий размер: 24 байта + 24 байта + 24 байта = 72 байта.

user2 содержит 2 поля и занимает в памяти : 12байт заголовок + int 4 байта
+ ссылка на String 4 байта. Итого 20 + округление к кратности 8 = 24байта :
+ String : 24 байта
 + new char[13]
Заголовок: 8 байт + 4 байта на длину массива == 12 байт
Примитивы char: 2 байта * 13 == 26 байт
Выравнивание для кратности 8 : 2 байта
Итого: 40 байт
Общий размер: 24 байта + 24 байта + 40 байт = 88 байт.

После создания объектов в цикле, они попадают в eden, когда eden заполнится,
будет происходить minor GC, для очищения young generation, так как объекты без ссылок .
*/
